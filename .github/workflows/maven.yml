name: Build JavaFX App for Multiple Platforms

on:
  push:
    branches:
      - main
      - release
      - dev
  pull_request:
    branches:
      - main
      - release
      - dev

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.HOME }}/.m2/repository # Linux/macOS
            ${{ env.USERPROFILE }}\.m2\repository # Windows
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build the JAR with Maven (includes JavaFX libraries using shade plugin)
      - name: Build with Maven
        run: mvn clean package -Drevision=${{ github.sha }} -Dbranch=${{ github.ref_name }}

      # List target directory to verify JAR generation
      - name: List target directory
        run: ls target/

      - name: Print GitHub SHA and Branch
        run: |
          echo "SHA: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"

      # Upload JAR artifact (Linux and Windows)
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: Graham-Scan-JAR-${{ runner.os }}
          path: target/graham-scan-0.0.1-SNAPSHOT.jar
